import toga
from toga.style import Pack
from toga.style.pack import COLUMN
from jnius import autoclass  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Android API

def get_battery_status():
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º Android API —á–µ—Ä–µ–∑ PyJNIus
        Context = autoclass("android.content.Context")
        BatteryManager = autoclass("android.os.BatteryManager")
        PythonActivity = autoclass("org.kivy.android.PythonActivity")
        
        activity = PythonActivity.mActivity
        battery_manager = activity.getSystemService(Context.BATTERY_SERVICE)
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
        level = battery_manager.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        is_charging = battery_manager.isCharging()
        
        status = "‚ö° –ó–∞—Ä—è–∂–∞–µ—Ç—Å—è" if is_charging else "üîã –†–∞–∑—Ä—è–∂–∞–µ—Ç—Å—è"
        return f"–ó–∞—Ä—è–¥: {level}%\n{status}"
    
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}"

def build(app):
    # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    label = toga.Label(
        get_battery_status(),
        style=Pack(padding=10, font_size=16)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    button = toga.Button(
        "–û–±–Ω–æ–≤–∏—Ç—å",
        on_press=lambda widget: setattr(label, "text", get_battery_status()),
        style=Pack(padding=5))
    
    # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    box = toga.Box(
        children=[label, button],
        style=Pack(direction=COLUMN, padding=10))
    
    return box

def main():
    return toga.App(
        "Battery Monitor",
        "org.example.battery",
        startup=build)

if __name__ == "__main__":
    app = main()
    app.main_loop()