import toga
import psutil
import os
import sys
from toga.style import Pack
from toga.style.pack import COLUMN

def get_battery_status():
    try:
        battery = psutil.sensors_battery()
        if battery:
            return f"üîã –ó–∞—Ä—è–¥: {battery.percent}% | {'‚ö° –ó–∞—Ä—è–¥–∫–∞' if battery.power_plugged else 'üîå –†–∞–∑—Ä—è–∂–∞–µ—Ç—Å—è'}"
        return "–ë–∞—Ç–∞—Ä–µ—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}"

def build(app):
    battery_label = toga.Label(get_battery_status(), style=Pack(font_size=14, padding=10))
    button = toga.Button(
        "–û–±–Ω–æ–≤–∏—Ç—å",
        on_press=lambda widget: setattr(battery_label, 'text', get_battery_status()),
        style=Pack(padding=5)
    )
    box = toga.Box(children=[battery_label, button], style=Pack(direction=COLUMN, padding=10))
    return box

def main():
    return toga.App(
        "Battery Monitor",
        "org.example.batterymonitor",
        startup=build,
        backend='gtk',  # –ò–ª–∏ –¥—Ä—É–≥–æ–π –±—ç–∫–µ–Ω–¥
    )

if __name__ == "__main__":
    if os.getenv('CI') == 'true':
        print(get_battery_status())
        sys.exit(0)
    try:
        app = main()
        app.main_loop()
    except Exception as e:
        print(f"CRASH: {e}", file=sys.stderr)
        sys.exit(1)