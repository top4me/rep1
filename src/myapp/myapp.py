import toga
import psutil

def get_battery_status():
    battery = psutil.sensors_battery()
    if battery:
        return f"üîã –ó–∞—Ä—è–¥: {battery.percent}% | {'‚ö° –ó–∞—Ä—è–¥–∫–∞' if battery.power_plugged else 'üîå –ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è'}"
    return "–ë–∞—Ç–∞—Ä–µ—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞"

def build(app):
    # –û–±–Ω–æ–≤–ª—è–µ–º–æ–µ –ø–æ–ª–µ —Å –∑–∞—Ä—è–¥–æ–º –±–∞—Ç–∞—Ä–µ–∏
    battery_label = toga.Label(get_battery_status(), style=Pack(font_size=14, padding=10))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    button = toga.Button(
        "–û–±–Ω–æ–≤–∏—Ç—å",
        on_press=lambda widget: battery_label.text = get_battery_status(),
        style=Pack(padding=5)
    )
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    box = toga.Box(
        children=[battery_label, button],
        style=Pack(direction=COLUMN, padding=10)
    )
    return box

def main():
    return toga.App(
        "Battery Monitor",
        "org.example.batterymonitor",
        startup=build,
        icon="icons/battery.ico"  # (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ø—É—Ç—å –∫ –∏–∫–æ–Ω–∫–µ
    )

if __name__ == "__main__":
    app = main()
    app.main_loop()